@model SkillMapv4.Models.Employee

@{
    ViewData["Title"] = "Editar";
}

<h1>Editar</h1>

<h4>Employee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Editar">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Age" class="control-label"></label>
                <input asp-for="Age" class="form-control" />
                <span asp-validation-for="Age" class="text-danger"></span>
            </div>

            <table id="SkillsTable" class="table table-stripped">
                <thead>
                    <tr>
                        <th>
                            Skill
                        </th>
                        <th>
                            Nível
                        </th>
                        <th>
                            Quero Aprender
                        </th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.Skills)
                        @for (int i = 0; i < Model.Skills.Count; i++)
                        {
                            <tr class="rows">
                                <td>
                                    @Html.EditorFor(x => x.Skills[i].SkillName, new { htmlAttributes = new { @class = "form-control" } })
                                    @*<input type="text" asp-for="@item.SkillName" class="form-control" />*@
                                </td>
                                <td>
                                    @Html.EditorFor(x => x.Skills[i].Nivel, new { htmlAttributes = new { @class = "form-control" } })
                                    @*<input type="number" asp-for="@item.Nivel" class="form-control" />*@
                                </td>
                                <td>
                                    @Html.EditorFor(x => x.Skills[i].WantToLearn, new { htmlAttributes = new { @class = "form-control" } })
                                    @*<input type="checkbox" aria-label="Checkbox for following text input" asp-for="@item.WantToLearn" class="form-control" />*@
                                </td>

                                <td>
                                    <button id="add" onclick="AddItem(this)" type="button" class="btn btn-sm btn-secondary visible">Add</button>
                                    <button id="remove" onclick="DeleteItem(this)" type="button" class="btn btn-sm btn-danger invisible">Remove</button>

                                </td>
                            </tr>

                        }
                </tbody>
            </table>
            <input type="hidden" id="hdnLastIndex" value="0"/>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
            
        </form>
            </div>
    </div>


<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        function DeleteItem(btn) {
            $(btn).closest('tr').remove();
        }



        function AddItem(btn) {

            var table = document.getElementById('SkillsTable');
            var rows = table.getElementsByTagName('tr');

            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastrowIdx = document.getElementById('hdnLastIndex').value;

            var nextrowIdx = eval(lastrowIdx) + 1;

            document.getElementById('hdnLastIndex').value = nextrowIdx;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);


            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;



            var btnAddID = btn.id;
            var btnDeleteid = btnAddID.replaceAll('add', 'remove');

            var delbtn = document.getElementById(btnDeleteid);
            delbtn.classList.add("visible");
            delbtn.classList.remove("invisible");


            var addbtn = document.getElementById(btnAddID);
            addbtn.classList.remove("visible");
            addbtn.classList.add("invisible");

        }
    </script>


}
